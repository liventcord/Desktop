name: Build and Test Tauri App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Use the correct version of checkout

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1  # Set up Rust toolchain
        with:
          toolchain: 'stable'  # You can change this to a specific version if needed

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm install

      - name: Install Tauri CLI
        run: |
          cargo install tauri-cli

      - name: Build the app
        run: |
          npm run tauri build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tauri-app
          path: src-tauri/target/release/*

  # Test Rust code
  test:
    name: Cargo Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 'stable'

      - name: Run Rust tests
        run: cargo test --all-features

  # Check Rust formatting with rustfmt
  formatting:
    name: Cargo fmt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain with rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1
        with:
          check: true  # This ensures rustfmt checks formatting without applying changes
