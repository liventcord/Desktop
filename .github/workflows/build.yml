name: Build and Release Neutralino.js App

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js and install Neutralino CLI
        run: |
          npm install -g @neutralinojs/neu
          neu create neutralino-app
          cd neutralino-app
          neu build --release

      - name: List neutralino-app directory contents
        run: ls -R neutralino-app  # List contents of neutralino-app to verify file locations

      - name: Update Neutralino config to point to remote URL
        run: |
          # Now we update the neutralino.config.json with the correct name
          if [ -f neutralino-app/neutralino.config.json ]; then
            sed -i 's#"url": "http://localhost:3000"#"url": "https://liventcord.bsite.net/app"#' neutralino-app/neutralino.config.json
          else
            echo "neutralino.config.json not found!"
            exit 1
          fi

      - name: Check dist directory
        run: ls -R neutralino-app/dist

      - name: Compress non-EXE files into zip
        run: |
          cd neutralino-app/dist
          for file in *; do
            if [[ ! "$file" =~ \.exe$ ]]; then
              if [[ ! "$file" =~ \.zip$ ]]; then  # Check if it's not already a zip file
                zip -r "${file}.zip" "$file"
              fi
            fi
          done

      - name: Upload compressed files as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: neutralino-app
          path: neutralino-app/dist/*.zip  # Upload all .zip files

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: neutralino-app

      - name: List downloaded files
        run: ls -R  # List files in the root directory to see the downloaded artifact contents

      - name: Extract compressed files
        run: |
          # Assuming artifact is downloaded to the current directory
          find . -type f \( -iname \*.zip -o -iname \*.tar -o -iname \*.gz \) -exec bash -c '
            for file; do
              case "$file" in
                *.zip) unzip "$file" -d "${file%.zip}" ;;
                *.tar) tar -xf "$file" -C "${file%.tar}" ;;
                *.gz) gunzip "$file" ;;
              esac
            done
          ' bash {} +

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: main
          name: Release ${{ github.ref }}
          body: "Release of the Neutralino app"
          files: ./*.zip  # Upload all .zip files to the release
          token: ${{ secrets.GITHUB_TOKEN }}
