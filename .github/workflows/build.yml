name: Build and Release Neutralino.js App

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js and install Neutralino CLI
        run: |
          npm install -g @neutralinojs/neu
          neu create neutralino-app
          cd neutralino-app
          neu build --release
      - name: Check dist directory
        run: ls -R neutralino-app/dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: neutralino-app
          path: neutralino-app/dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: neutralino-app

      - name: List downloaded files
        run: ls -R neutralino-app

      - name: Map expected binaries directly (no extension changes)
        id: map_binaries
        run: |
          binaries=(
            "neutralino-app/neutralino-app/dist/neutralino-app-linux_arm64"
            "neutralino-app/neutralino-app/dist/neutralino-app-linux_armhf"
            "neutralino-app/neutralino-app/dist/neutralino-app-linux_x64"
            "neutralino-app/neutralino-app/dist/neutralino-app-mac_arm64"
            "neutralino-app/neutralino-app/dist/neutralino-app-mac_universal"
            "neutralino-app/neutralino-app/dist/neutralino-app-mac_x64"
            "neutralino-app/neutralino-app/dist/neutralino-app-win_x64.exe"
          )
          echo "BINARY_FILES=${binaries[*]}" >> $GITHUB_ENV
          echo "Found binaries: ${binaries[*]}"

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: main
          release_name: Release ${{ github.ref }}
          body: "Release of the Neutralino app"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        run: |
          for file in ${BINARY_FILES}; do
            echo "Uploading $file..."
            curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              --data-binary @$file \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$(basename $file)"
          done
