name: Build and Release Neutralino.js App

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js and install Neutralino CLI
        run: |
          npm install -g @neutralinojs/neu
          neu create neutralino-app
          cd neutralino-app
          neu build --release
      - name: Check dist directory
        run: ls -R neutralino-app/dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: neutralino-app
          path: neutralino-app/dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: neutralino-app

      - name: List downloaded files
        run: ls -R neutralino-app

      - name: Map expected binaries directly with extensions
        id: map_binaries
        run: |
          # Define the full paths of expected binaries with extensions for Linux and macOS builds
          binaries=(
            "neutralino-app/neutralino-app/dist/neutralino-app-linux_arm64"
            "neutralino-app/neutralino-app/dist/neutralino-app-linux_armhf"
            "neutralino-app/neutralino-app/dist/neutralino-app-linux_x64"
            "neutralino-app/neutralino-app/dist/neutralino-app-mac_arm64"
            "neutralino-app/neutralino-app/dist/neutralino-app-mac_universal"
            "neutralino-app/neutralino-app/dist/neutralino-app-mac_x64"
            "neutralino-app/neutralino-app/dist/neutralino-app-win_x64.exe"
          )
          # Manually add extensions for the non-Windows builds
          renamed_binaries=()
          for binary in "${binaries[@]}"; do
            if [[ "$binary" == *"linux"* ]]; then
              renamed_binaries+=("${binary}.tar")
            elif [[ "$binary" == *"mac"* ]]; then
              renamed_binaries+=("${binary}.tar")
            else
              renamed_binaries+=("$binary")
            fi
          done
          # Set the renamed binaries as environment variable
          echo "BINARY_FILES=${renamed_binaries[*]}" >> $GITHUB_ENV
          echo "Found binaries: ${renamed_binaries[*]}"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: main
          name: Release ${{ github.ref }}
          body: "Release of the Neutralino app"
          files: ${{ env.BINARY_FILES }}
          token: ${{ secrets.GITHUB_TOKEN }}
